{"ast":null,"code":"var _jsxFileName = \"/home/davie/Desktop/my-projects/bot-game/bot-game/src/YourBotArmy.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport BotProfile from '../BotProfile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction YourBotArmy() {\n  _s();\n  const [army, setArmy] = useState([]);\n  const [bots, setBots] = useState([\n  // Initial list of bots\n  {\n    id: 1,\n    name: 'Bot 1',\n    power: 100,\n    speed: 50\n  }, {\n    id: 2,\n    name: 'Bot 2',\n    power: 120,\n    speed: 60\n  }]);\n  const addToArmy = bot => {\n    setArmy([...army, bot]);\n  };\n  const removeFromArmy = bot => {\n    const updatedArmy = army.filter(b => b.id !== bot.id);\n    setArmy(updatedArmy);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Bot Army\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), army.map(bot => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(BotProfile, {\n        bot: bot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => removeFromArmy(bot),\n        children: \"Release\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)]\n    }, bot.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Bots\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), bots.map(bot => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(BotProfile, {\n        bot: bot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addToArmy(bot),\n        children: \"Add to Army\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, bot.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(YourBotArmy, \"/DMwDnVAKVRjPxO9uMHyZ5dZ5CI=\");\n_c = YourBotArmy;\nexport default YourBotArmy;\nvar _c;\n$RefreshReg$(_c, \"YourBotArmy\");","map":{"version":3,"names":["React","useState","BotProfile","jsxDEV","_jsxDEV","YourBotArmy","_s","army","setArmy","bots","setBots","id","name","power","speed","addToArmy","bot","removeFromArmy","updatedArmy","filter","b","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","_c","$RefreshReg$"],"sources":["/home/davie/Desktop/my-projects/bot-game/bot-game/src/YourBotArmy.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport BotProfile from '../BotProfile';\n\nfunction YourBotArmy() {\n  const [army, setArmy] = useState([]);\n  const [bots, setBots] = useState([\n    // Initial list of bots\n    { id: 1, name: 'Bot 1', power: 100, speed: 50 },\n    { id: 2, name: 'Bot 2', power: 120, speed: 60 },\n  ]);\n\n  const addToArmy = (bot) => {\n    setArmy([...army, bot]);\n  };\n\n  const removeFromArmy = (bot) => {\n    const updatedArmy = army.filter((b) => b.id !== bot.id);\n    setArmy(updatedArmy);\n  };\n\n  return (\n    <div>\n      <h2>Your Bot Army</h2>\n      {army.map((bot) => (\n        <div key={bot.id}>\n          <BotProfile bot={bot} />\n          <button onClick={() => removeFromArmy(bot)}>Release</button>\n        </div>\n      ))}\n      <h2>All Bots</h2>\n      {bots.map((bot) => (\n        <div key={bot.id}>\n          <BotProfile bot={bot} />\n          <button onClick={() => addToArmy(bot)}>Add to Army</button>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default YourBotArmy;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC;EAC/B;EACA;IAAEU,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,OAAO;IAAEC,KAAK,EAAE,GAAG;IAAEC,KAAK,EAAE;EAAG,CAAC,EAC/C;IAAEH,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,OAAO;IAAEC,KAAK,EAAE,GAAG;IAAEC,KAAK,EAAE;EAAG,CAAC,CAChD,CAAC;EAEF,MAAMC,SAAS,GAAIC,GAAG,IAAK;IACzBR,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAES,GAAG,CAAC,CAAC;EACzB,CAAC;EAED,MAAMC,cAAc,GAAID,GAAG,IAAK;IAC9B,MAAME,WAAW,GAAGX,IAAI,CAACY,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACT,EAAE,KAAKK,GAAG,CAACL,EAAE,CAAC;IACvDH,OAAO,CAACU,WAAW,CAAC;EACtB,CAAC;EAED,oBACEd,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrBlB,IAAI,CAACmB,GAAG,CAAEV,GAAG,iBACZZ,OAAA;MAAAiB,QAAA,gBACEjB,OAAA,CAACF,UAAU;QAACc,GAAG,EAAEA;MAAI;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxBrB,OAAA;QAAQuB,OAAO,EAAEA,CAAA,KAAMV,cAAc,CAACD,GAAG,CAAE;QAAAK,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAFpDT,GAAG,CAACL,EAAE;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGX,CACN,CAAC,eACFrB,OAAA;MAAAiB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChBhB,IAAI,CAACiB,GAAG,CAAEV,GAAG,iBACZZ,OAAA;MAAAiB,QAAA,gBACEjB,OAAA,CAACF,UAAU;QAACc,GAAG,EAAEA;MAAI;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxBrB,OAAA;QAAQuB,OAAO,EAAEA,CAAA,KAAMZ,SAAS,CAACC,GAAG,CAAE;QAAAK,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAFnDT,GAAG,CAACL,EAAE;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGX,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACnB,EAAA,CAnCQD,WAAW;AAAAuB,EAAA,GAAXvB,WAAW;AAqCpB,eAAeA,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}