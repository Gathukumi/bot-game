{"ast":null,"code":"var _jsxFileName = \"/home/davie/Desktop/my-projects/bot-game/bot-game/src/BotCollection.jsx\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BotCollection({\n  selectedBot\n}) {\n  _s();\n  const [bots, setBots] = useState([]);\n  const [army, setArmy] = useState([]);\n  useEffect(() => {\n    async function fetchBots() {\n      try {\n        const response = await fetch('http://localhost:3000/bots');\n        const data = await response.json();\n        if (Array.isArray(data)) {\n          setBots(data);\n        }\n      } catch (error) {\n        console.error('Error fetching bots:', error);\n      }\n    }\n    fetchBots();\n  }, []);\n  const addToArmy = bot => {\n    if (!army.includes(bot)) {\n      setArmy([...army, bot]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bot-list-container\",\n    children: Array.isArray(bots) && bots.map((bot, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bot-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: bot.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: bot.image,\n        alt: bot.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addToArmy(bot),\n        children: \"Add to Army\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(BotCollection, \"68vvBV/GRPK97Mw+lesffEpDxCY=\");\n_c = BotCollection;\nvar _c;\n$RefreshReg$(_c, \"BotCollection\");","map":{"version":3,"names":["BotCollection","selectedBot","_s","bots","setBots","useState","army","setArmy","useEffect","fetchBots","response","fetch","data","json","Array","isArray","error","console","addToArmy","bot","includes","_jsxDEV","className","children","map","index","name","fileName","_jsxFileName","lineNumber","columnNumber","src","image","alt","onClick","_c","$RefreshReg$"],"sources":["/home/davie/Desktop/my-projects/bot-game/bot-game/src/BotCollection.jsx"],"sourcesContent":["function BotCollection({ selectedBot }) {\n  const [bots, setBots] = useState([]);\n  const [army, setArmy] = useState([]);\n\n  useEffect(() => {\n    async function fetchBots() {\n      try {\n        const response = await fetch('http://localhost:3000/bots');\n        const data = await response.json();\n        if (Array.isArray(data)) {\n          setBots(data);\n        }\n      } catch (error) {\n        console.error('Error fetching bots:', error);\n      }\n    }\n    fetchBots();\n  }, []);\n\n  const addToArmy = (bot) => {\n    if (!army.includes(bot)) {\n      setArmy([...army, bot]);\n    }\n  };\n\n  return (\n    <div className=\"bot-list-container\">\n      {Array.isArray(bots) && bots.map((bot, index) => (\n        <div key={index} className=\"bot-item\">\n          <h3>{bot.name}</h3>\n          <img src={bot.image} alt={bot.name} />\n          <button onClick={() => addToArmy(bot)}>Add to Army</button>\n        </div>\n      ))}\n    </div>\n  );\n}\n"],"mappings":";;;AAAA,SAASA,aAAaA,CAAC;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EACtC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC;EAEpCG,SAAS,CAAC,MAAM;IACd,eAAeC,SAASA,CAAA,EAAG;MACzB,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,CAAC;QAC1D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClC,IAAIC,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,EAAE;UACvBR,OAAO,CAACQ,IAAI,CAAC;QACf;MACF,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF;IACAP,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,SAAS,GAAIC,GAAG,IAAK;IACzB,IAAI,CAACb,IAAI,CAACc,QAAQ,CAACD,GAAG,CAAC,EAAE;MACvBZ,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEa,GAAG,CAAC,CAAC;IACzB;EACF,CAAC;EAED,oBACEE,OAAA;IAAKC,SAAS,EAAC,oBAAoB;IAAAC,QAAA,EAChCT,KAAK,CAACC,OAAO,CAACZ,IAAI,CAAC,IAAIA,IAAI,CAACqB,GAAG,CAAC,CAACL,GAAG,EAAEM,KAAK,kBAC1CJ,OAAA;MAAiBC,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACnCF,OAAA;QAAAE,QAAA,EAAKJ,GAAG,CAACO;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACnBT,OAAA;QAAKU,GAAG,EAAEZ,GAAG,CAACa,KAAM;QAACC,GAAG,EAAEd,GAAG,CAACO;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtCT,OAAA;QAAQa,OAAO,EAAEA,CAAA,KAAMhB,SAAS,CAACC,GAAG,CAAE;QAAAI,QAAA,EAAC;MAAW;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAHnDL,KAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIV,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC5B,EAAA,CApCQF,aAAa;AAAAmC,EAAA,GAAbnC,aAAa;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}